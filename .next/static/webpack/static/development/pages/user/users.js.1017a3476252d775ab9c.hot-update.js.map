{"version":3,"file":"static/webpack/static/development/pages/user/users.js.1017a3476252d775ab9c.hot-update.js","sources":["webpack:///./pages/user/users.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Modal from 'react-modal';\nimport { Button, Card, Image } from 'semantic-ui-react'\n\n\n\n\nclass Users extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            users: [],\n        };\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:4000/userss')\n        .then(results => {\n                return results.json();\n            }\n        ).then(data => {\n            let users = data.results.map((user) => {\n                return(\n                    <div key={user.results}>\n                        <div>\n                            {user.user_id}\n                        </div>\n                    </div>\n                )\n            })\n            this.setState({users: users});\n            console.log(\"state\", this.state.users);\n        })\n    }\n\n    render(){\n        return(\n            <div>Hello\n                {this.state.users}\n            </div>\n        )\n    }\n    \n\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         users: []\n    //     }\n    // }\n\n    // componentDidMount() {\n    //     let self = this;\n    //     fetch('http://localhost:4000/userss', {\n    //         method: 'GET'\n    //     }).then(function(response) {\n    //         if (response.status >= 400) {\n    //             throw new Error(\"Bad response from server\");\n    //         }\n    //         return response.json();\n    //     }).then(function(data) {\n    //         self.setState({users:data});\n    //         console.log(data)\n    //     }).catch(err => {\n    //     console.log('caught it!',err);\n    //     })\n    // }\n\n    // renderUsers(){\n    //     const users = this.state.users.map(UserProfiles =>{\n    //         return {\n    //             header: user.user_id,\n    //             description: <a>View User</a>,\n    //             fluid: true\n    //         }\n    //     });\n\n    //     return <Card.Group users={users}/>;\n    // }\n\n    // renderUserID = ({userID, user_id}) => <div key={userID}>{user_id}</div>\n    // renderUserFirstName = ({userFirstName, user_firstname}) => <div key={userFirstName}>{user_firstname}</div>\n    // renderUserLastName = ({userLastName, user_lastname}) => <div key={userLastName}>{user_lastname}</div>\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AA7EA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}